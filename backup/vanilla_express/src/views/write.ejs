<%- include('partials/header') %>

<style>
    html, body {
        height: 100%;
        margin: 0;
    }
    .wrapper {
        min-height: 100%;
        display: flex;
        flex-direction: column;
    }
    .content {
        flex: 1;
    }
    footer {
        margin-top: auto;
    }
    .write-form {
        max-width: 800px;
        margin: 0 auto;
    }
    .editor-container {
        position: relative;
        margin-bottom: 1rem;
    }
    .editor-tabs {
        display: flex;
        margin-bottom: 0.5rem;
    }
    .editor-tab {
        padding: 0.5rem 1rem;
        cursor: pointer;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-bottom: none;
        border-radius: 0.25rem 0.25rem 0 0;
        margin-right: 0.25rem;
    }
    .editor-tab.active {
        background-color: #fff;
        border-bottom: 1px solid #fff;
        margin-bottom: -1px;
        z-index: 1;
    }
    .editor-content {
        border: 1px solid #dee2e6;
        border-radius: 0 0.25rem 0.25rem 0.25rem;
        padding: 0.5rem;
        min-height: 400px;
    }
    #htmlEditor, #textEditor {
        width: 100%;
        min-height: 400px;
        padding: 0.5rem;
        font-family: monospace;
        resize: vertical;
    }
    #preview {
        border: 1px solid #dee2e6;
        border-radius: 0.25rem;
        padding: 1rem;
        margin-top: 1rem;
        min-height: 200px;
        background-color: #fff;
    }
</style>

<div class="wrapper">
    <div class="content">
        <div class="container mt-4">
            <div class="write-form">
                <h1 class="mb-4"><%= typeof post !== 'undefined' && post ? 'Edit Post' : 'Write New Post' %></h1>
                <form id="writeForm" action="<%= typeof post !== 'undefined' && post ? `/posts/${post.id}` : '/posts' %>" method="<%= typeof post !== 'undefined' && post ? 'PUT' : 'POST' %>">
                    <input type="hidden" id="postId" value="<%= typeof post !== 'undefined' && post ? post.id : '' %>">
                    <div class="form-group">
                        <label for="title">Title</label>
                        <input type="text" class="form-control" id="title" name="title" value="<%= typeof post !== 'undefined' && post ? post.title : '' %>" required>
                    </div>
                    <div class="form-group">
                        <label for="permission">Permission</label>
                        <select class="form-control" id="permission" name="permission" required>
                            <option value="public" <%= typeof post !== 'undefined' && post && post.permission === 'public' ? 'selected' : '' %>>Public</option>
                            <option value="private" <%= typeof post !== 'undefined' && post && post.permission === 'private' ? 'selected' : '' %>>Private</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="content" class="form-label">Content</label>
                        <div class="editor-container">
                            <div class="editor-tabs">
                                <div class="editor-tab active" id="textTab">Text Mode</div>
                                <div class="editor-tab" id="htmlTab">HTML Mode</div>
                            </div>
                            <div class="editor-content">
                                <textarea id="textEditor" class="form-control"><%= typeof post !== 'undefined' && post ? post.content.replace(/<br\s*\/?>/g, '\n') : '' %></textarea>
                                <textarea id="htmlEditor" class="form-control" style="display: none;"><%= typeof post !== 'undefined' && post ? post.content : '' %></textarea>
                            </div>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="showPreview">
                            <label class="form-check-label" for="showPreview">
                                Show Preview
                            </label>
                        </div>
                        <div id="preview" style="display: none;"></div>
                        <input type="hidden" id="content" name="content">
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-secondary me-2" onclick="window.location.href='/'">Cancel</button>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <%- include('partials/footer') %>
</div>

<script>
// Editor related variables
const textEditor = document.getElementById('textEditor');
const htmlEditor = document.getElementById('htmlEditor');
const textTab = document.getElementById('textTab');
const htmlTab = document.getElementById('htmlTab');
const showPreview = document.getElementById('showPreview');
const preview = document.getElementById('preview');
const contentInput = document.getElementById('content');

// Currently active editor (text or html)
let activeEditor = 'text';

// Tab switching function
function switchTab(mode) {
    if (mode === 'text') {
        textTab.classList.add('active');
        htmlTab.classList.remove('active');
        textEditor.style.display = 'block';
        htmlEditor.style.display = 'none';
        
        // Remove HTML tags when switching from HTML to text
        if (activeEditor === 'html') {
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = htmlEditor.value;
            textEditor.value = tempDiv.textContent || tempDiv.innerText;
        }
        
        activeEditor = 'text';
    } else {
        textTab.classList.remove('active');
        htmlTab.classList.add('active');
        textEditor.style.display = 'none';
        htmlEditor.style.display = 'block';
        
        // Wrap text in p tags when switching from text to HTML
        if (activeEditor === 'text') {
            const lines = textEditor.value.split('\n').filter(line => line.trim() !== '');
            htmlEditor.value = lines.map(line => `<p>${line}</p>`).join('\n');
        }
        
        activeEditor = 'html';
    }
    
    updatePreview();
}

// Update preview
function updatePreview() {
    if (showPreview.checked) {
        preview.style.display = 'block';
        preview.innerHTML = activeEditor === 'text' 
            ? textEditor.value.replace(/\n/g, '<br>') 
            : htmlEditor.value;
    } else {
        preview.style.display = 'none';
    }
}

// Event listeners
textTab.addEventListener('click', () => switchTab('text'));
htmlTab.addEventListener('click', () => switchTab('html'));

textEditor.addEventListener('input', updatePreview);
htmlEditor.addEventListener('input', updatePreview);

showPreview.addEventListener('change', updatePreview);

document.getElementById('writeForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const title = document.getElementById('title').value;
    const content = activeEditor === 'text' 
        ? textEditor.value.replace(/\n/g, '<br>') 
        : htmlEditor.value;
    const permission = document.getElementById('permission').value;
    const postId = document.getElementById('postId').value;
    const isEdit = postId !== '';

    try {
        const response = await fetch(isEdit ? `/posts/${postId}` : '/posts', {
            method: isEdit ? 'PUT' : 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                title,
                content,
                permission
            }),
            credentials: 'include'
        });

        if (response.ok) {
            window.location.href = '/posts';
        } else {
            const data = await response.json();
            alert(data.error || 'Failed to save post');
        }
    } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while saving the post');
    }
});
</script> 