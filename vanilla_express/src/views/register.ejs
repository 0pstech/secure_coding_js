<%- include('partials/header') %>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header">
                    <h1 class="h4 mb-0">Register</h1>
                </div>
                <div class="card-body">
                    <% if (error && error.length > 0) { %>
                        <div class="alert alert-danger">
                            <%= error %>
                        </div>
                    <% } %>
                    
                    <form id="registerForm" action="/auth/register" method="POST" class="needs-validation" novalidate>
                        <div class="mb-3">
                            <label for="username" class="form-label">Username</label>
                            <input type="text" class="form-control" id="username" name="username" 
                                   pattern="^[a-zA-Z0-9_]{3,20}$" required>
                            <div class="invalid-feedback">
                                Username must be 3-20 characters long and contain only letters, numbers, and underscores.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" required>
                            <div class="invalid-feedback">
                                Please enter a valid email address.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" required
                            minlength="15" maxlength="64">
                            <div class="invalid-feedback">
                                Password must be between 15 and 64 characters.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required
                            minlength="15" maxlength="64">
                            <div class="invalid-feedback">
                                Passwords do not match.
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Register</button>
                        </div>
                    </form>

                    <hr>

                    <div class="text-center">
                        <p>Already have an account? <a href="/auth/login">Login</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('registerForm');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirmPassword');

    form.addEventListener('submit', async function(event) {
        event.preventDefault();

        const pwd = password.value;
        const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]).{15,64}$/;
        
        if (!form.checkValidity()) {
            event.stopPropagation();
            form.classList.add('was-validated');
            return;
        }

        if (!passwordRegex.test(pwd)) {
            password.setCustomValidity('Password must be 15-64 chars. include uppercase, number, and special chars.')
            form.classList.add('was-validated');
            return;
        } else {
            password.setCustomValidity('');
        }

        if (password.value !== confirmPassword.value) {
            confirmPassword.setCustomValidity('Passwords do not match');
            form.classList.add('was-validated');
            return;
        }

        try {
            const formData = {
                username: document.getElementById('username').value,
                email: document.getElementById('email').value,
                password: password.value
            };

            const response = await fetch('/auth/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (response.ok) {
                alert('Registration successful! You will be redirected to the login page.');
                window.location.href = '/auth/login';
            } else {
                alert(result.message || 'Registration failed. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred. Please try again.');
        }
    });

    // Clear custom validity when user types
    confirmPassword.addEventListener('input', function() {
        if (password.value === confirmPassword.value) {
            confirmPassword.setCustomValidity('');
        } else {
            confirmPassword.setCustomValidity('Passwords do not match');
        }
    });
});
</script>

<%- include('partials/footer') %> 