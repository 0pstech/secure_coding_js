<%- include('partials/header') %>

<style>
  html, body {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
  }
  .wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
  }
  .content {
    flex: 1;
    padding: 2rem;
  }
  .ai-prompt-form {
    max-width: 800px;
    margin: 0 auto;
  }
  .ai-prompt-form h1 {
    text-align: center;
    margin-bottom: 1.5rem;
  }
  .form-group {
    margin-bottom: 1rem;
  }
  label {
    display: block;
    margin-bottom: 0.5rem;
  }
  textarea, input[type="text"] {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  button {
    display: block;
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    color: #fff;
    background-color: #0d6efd;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-top: 1rem;
  }
  #resultContainer {
    margin-top: 2rem;
    padding: 1rem;
    border: 1px solid #0d6efd;
    border-radius: 4px;
    background-color: #f1f8ff;
    white-space: pre-wrap;
  }
</style>

<div class="wrapper">
  <div class="content">
    <div class="ai-prompt-form">
      <h1>AI Prompt Page</h1>
      <form id="aiPromptForm">
        <div class="form-group">
          <label for="promptInput">Enter your prompt:</label>
          <textarea id="promptInput" rows="4" placeholder="Type your prompt here..." required></textarea>
        </div>
        <button type="submit">Send Prompt</button>
      </form>
      <div id="resultContainer" style="display: none;"></div>
    </div>
  </div>
  <%- include('partials/footer') %>
</div>

<script>

// client key hardcoding
// service abuse / DoS

// --- OpenAI API 키 (교육용, 실제 서비스에서는 절대 클라이언트에 공개하지 마세요!) ---
const OPENAI_API_KEY = "sk-SECRETKEY";

// Form submission event handler
document.getElementById('aiPromptForm').addEventListener('submit', async (e) => {
  e.preventDefault();

  const promptInput = document.getElementById('promptInput');
  const prompt = promptInput.value.trim();
  const resultContainer = document.getElementById('resultContainer');
  
  if (!prompt) {
    alert("Please enter a prompt.");
    return;
  }
  
  // Show a loading message
  resultContainer.style.display = 'block';
  resultContainer.innerHTML = "Loading response...";
  
  try {
    const response = await fetch("https://api.openai.com/v1/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${OPENAI_API_KEY}`
      },
      body: JSON.stringify({
        model: "text-davinci-003", // 사용할 모델 지정 (예: text-davinci-003)
        prompt: prompt,
        max_tokens: 150,
        temperature: 0.7
      })
    });
    
    if (!response.ok) {
      throw new Error(`OpenAI API error: ${response.statusText}`);
    }
    
    const data = await response.json();
    if (data.choices && data.choices.length > 0) {
      resultContainer.innerHTML = data.choices[0].text.trim();
    } else {
      resultContainer.innerHTML = "No response received.";
    }
  } catch (error) {
    console.error("Error:", error);
    resultContainer.innerHTML = "An error occurred while fetching the response.";
  }
});
</script>
